{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WEB-ZTP","text":""},{"location":"#bienvenue-dans-la-documentation-de-web-ztp","title":"Bienvenue dans la documentation de WEB-ZTP","text":"<p>WEB-ZTP est une interface web compl\u00e8te int\u00e9grant un serveur DHCP d\u00e9velopp\u00e9 en interne, ainsi qu'une impl\u00e9mentation personnalis\u00e9e de la fonctionnalit\u00e9 Zero Touch Provisioning (ZTP). Cette plateforme permet aux utilisateurs d'ajouter et de configurer des appareils de mani\u00e8re automatis\u00e9e via une interface intuitive et ergonomique.</p>"},{"location":"#fonctionnalites-principales","title":"Fonctionnalit\u00e9s principales","text":"<ul> <li>Dashboard : Vue d'ensemble des configurations en place</li> <li>Configuration d'appareils : Ajout et configuration automatis\u00e9e d'appareils</li> <li>Serveur DHCP int\u00e9gr\u00e9 : Gestion compl\u00e8te des adresses IP</li> <li>ZTP (Zero Touch Provisioning) : Configuration automatique des \u00e9quipements</li> <li>Interface intuitive : Navigation fluide et ergonomique</li> </ul>"},{"location":"#dernieres-mises-a-jour","title":"Derni\u00e8res mises \u00e0 jour","text":"<ul> <li>Migration vers PostgreSQL pour la production</li> <li>Finalisation de la conteneurisation du projet</li> </ul>"},{"location":"#commencer-rapidement","title":"Commencer rapidement","text":"<pre><code># Installation avec Docker\ndocker compose up --build -d\n\n# Installation manuelle\npython manage.py migrate\npython manage.py loaddata dhcp_config.json\npython manage.py runserver\n</code></pre>"},{"location":"#auteurs","title":"Auteurs","text":"<ul> <li>Nassim El Haddad</li> <li>Chadi Mangl\u00e9</li> <li>Ilyes Belkhir</li> <li>Lucas Dr\u00e9ano</li> </ul> <p>Ce projet est r\u00e9alis\u00e9 dans le cadre du cursus ing\u00e9nieur \u00e0 T\u00e9l\u00e9com SudParis.</p>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#configuration-de-base","title":"Configuration de base","text":""},{"location":"configuration/#fichier-env","title":"Fichier .env","text":"<p>Le fichier <code>.env</code> contient les variables d'environnement essentielles pour le fonctionnemment de postgresql:</p> <pre><code>C'EST UN EXEMPLE A CHANGER A LA FIN DU PROJET\n# Django\nDJANGO_SECRET_KEY=votre_cl\u00e9_secr\u00e8te\nDEBUG=True\nALLOWED_HOSTS=localhost,127.0.0.1\n\n# Base de donn\u00e9es\nDATABASE_URL=postgres://user:password@localhost:5432/web_ztp\n\n# DHCP\nDHCP_SERVER=192.168.1.1\nDHCP_PORT=67\n</code></pre>"},{"location":"configuration/#configuration-django","title":"Configuration Django","text":"<p>Les param\u00e8tres Django principaux sont dans <code>web_ztp/settings.py</code> :</p> <pre><code># Configuration de la base de donn\u00e9es\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'web_ztp',\n        'USER': 'user',\n        'PASSWORD': 'password',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}\n\n# Configuration des templates\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n</code></pre>"},{"location":"configuration/#configuration-du-serveur-dhcp","title":"Configuration du serveur DHCP","text":""},{"location":"configuration/#fichier-dhcpdconf","title":"Fichier dhcpd.conf","text":"<p>Le fichier de configuration DHCP se trouve dans <code>dhcp_server/dhcpd_server.py</code> :</p> <pre><code># Configuration globale\noption domain-name \"example.com\";\noption domain-name-servers 8.8.8.8, 8.8.4.4;\n\ndefault-lease-time 600;\nmax-lease-time 7200;\n\n# Sous-r\u00e9seau\nsubnet 192.168.1.0 netmask 255.255.255.0 {\n    range 192.168.1.100 192.168.1.200;\n    option routers 192.168.1.1;\n    option subnet-mask 255.255.255.0;\n    option broadcast-address 192.168.1.255;\n}\n</code></pre>"},{"location":"configuration/#options-dhcp-personnalisees","title":"Options DHCP personnalis\u00e9es","text":"<p>Pour ajouter des options DHCP personnalis\u00e9es :</p> <pre><code># Option personnalis\u00e9e pour le serveur TFTP\noption tftp-server-name code 150 = string;\noption tftp-server-name \"192.168.1.2\";\n\n# Option pour le fichier de configuration\noption config-file code 67 = string;\noption config-file \"config.txt\";\n</code></pre>"},{"location":"configuration/#configuration-des-equipements","title":"Configuration des \u00e9quipements","text":""},{"location":"configuration/#templates-de-configuration","title":"Templates de configuration","text":"<p>Les templates sont stock\u00e9s dans <code>????</code> :</p> <pre><code># Template pour switch Cisco\nhostname {{ hostname }}\n!\ninterface {{ interface }}\n description {{ description }}\n switchport mode access\n switchport access vlan {{ vlan }}\n!\n</code></pre>"},{"location":"configuration/#securite","title":"S\u00e9curit\u00e9","text":""},{"location":"configuration/#authentification","title":"Authentification","text":"<p>Configuration de l'authentification dans <code>web_ztp/settings.py</code> :</p> <pre><code>AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n]\n\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/dashboard/'\nLOGOUT_REDIRECT_URL = '/login/'\n</code></pre>"},{"location":"configuration/#monitoring","title":"Monitoring","text":""},{"location":"configuration/#configuration-des-logs","title":"Configuration des logs","text":"<p>localisation : '???????'  a ajouter bient\u00f4t</p>"},{"location":"fonctionnalites/","title":"Configuration","text":""},{"location":"fonctionnalites/#configuration-de-base","title":"Configuration de base","text":""},{"location":"fonctionnalites/#fichier-env","title":"Fichier .env","text":"<p>Le fichier <code>.env</code> contient les variables d'environnement essentielles :</p> <pre><code># Django\nDJANGO_SECRET_KEY=votre_cl\u00e9_secr\u00e8te\nDEBUG=True\nALLOWED_HOSTS=localhost,127.0.0.1\n\n# Base de donn\u00e9es\nDATABASE_URL=postgres://user:password@localhost:5432/web_ztp\n\n# DHCP\nDHCP_SERVER=192.168.1.1\nDHCP_PORT=67\n</code></pre>"},{"location":"fonctionnalites/#configuration-django","title":"Configuration Django","text":"<p>Les param\u00e8tres Django principaux sont dans <code>web_ztp/settings.py</code> :</p> <pre><code># Configuration de la base de donn\u00e9es\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'web_ztp',\n        'USER': 'user',\n        'PASSWORD': 'password',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}\n\n# Configuration des templates\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n</code></pre>"},{"location":"fonctionnalites/#configuration-du-serveur-dhcp","title":"Configuration du serveur DHCP","text":""},{"location":"fonctionnalites/#fichier-dhcpdconf","title":"Fichier dhcpd.conf","text":"<p>Le fichier de configuration DHCP se trouve dans <code>dhcp/dhcpd.conf</code> :</p> <pre><code># Configuration globale\noption domain-name \"example.com\";\noption domain-name-servers 8.8.8.8, 8.8.4.4;\n\ndefault-lease-time 600;\nmax-lease-time 7200;\n\n# Sous-r\u00e9seau\nsubnet 192.168.1.0 netmask 255.255.255.0 {\n    range 192.168.1.100 192.168.1.200;\n    option routers 192.168.1.1;\n    option subnet-mask 255.255.255.0;\n    option broadcast-address 192.168.1.255;\n}\n</code></pre>"},{"location":"fonctionnalites/#options-dhcp-personnalisees","title":"Options DHCP personnalis\u00e9es","text":"<p>Pour ajouter des options DHCP personnalis\u00e9es :</p> <pre><code># Option personnalis\u00e9e pour le serveur TFTP\noption tftp-server-name code 150 = string;\noption tftp-server-name \"192.168.1.2\";\n\n# Option pour le fichier de configuration\noption config-file code 67 = string;\noption config-file \"config.txt\";\n</code></pre>"},{"location":"fonctionnalites/#configuration-des-equipements","title":"Configuration des \u00e9quipements","text":""},{"location":"fonctionnalites/#templates-de-configuration","title":"Templates de configuration","text":"<p>Les templates sont stock\u00e9s dans <code>templates/</code> :</p> <pre><code># Template pour switch Cisco\nhostname {{ hostname }}\n!\ninterface {{ interface }}\n description {{ description }}\n switchport mode access\n switchport access vlan {{ vlan }}\n!\n</code></pre>"},{"location":"fonctionnalites/#variables-denvironnement","title":"Variables d'environnement","text":"<p>Les variables d'environnement pour les \u00e9quipements sont d\u00e9finies dans <code>equipment/models.py</code> :</p> <pre><code>class Equipment(models.Model):\n    name = models.CharField(max_length=100)\n    model = models.CharField(max_length=100)\n    ip_address = models.GenericIPAddressField()\n    mac_address = models.CharField(max_length=17)\n    configuration = models.TextField()\n</code></pre>"},{"location":"fonctionnalites/#securite","title":"S\u00e9curit\u00e9","text":""},{"location":"fonctionnalites/#configuration-ssltls","title":"Configuration SSL/TLS","text":"<p>Pour activer HTTPS, modifiez <code>web_ztp/settings.py</code> :</p> <pre><code>SECURE_SSL_REDIRECT = True\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_SECURE = True\n</code></pre>"},{"location":"fonctionnalites/#authentification","title":"Authentification","text":"<p>Configuration de l'authentification dans <code>web_ztp/settings.py</code> :</p> <pre><code>AUTHENTICATION_BACKENDS = [\n    'django.contrib.auth.backends.ModelBackend',\n]\n\nLOGIN_URL = '/login/'\nLOGIN_REDIRECT_URL = '/dashboard/'\nLOGOUT_REDIRECT_URL = '/login/'\n</code></pre>"},{"location":"fonctionnalites/#monitoring","title":"Monitoring","text":""},{"location":"fonctionnalites/#configuration-des-logs","title":"Configuration des logs","text":"<p>Les logs sont configur\u00e9s dans <code>web_ztp/settings.py</code> :</p> <pre><code>LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'file': {\n            'level': 'DEBUG',\n            'class': 'logging.FileHandler',\n            'filename': 'debug.log',\n        },\n    },\n    'loggers': {\n        'django': {\n            'handlers': ['file'],\n            'level': 'DEBUG',\n            'propagate': True,\n        },\n    },\n}\n</code></pre>"},{"location":"fonctionnalites/#configuration-des-alertes","title":"Configuration des alertes","text":"<p>Les alertes sont configur\u00e9es dans <code>monitoring/settings.py</code> :</p> <pre><code>ALERT_SETTINGS = {\n    'email': {\n        'enabled': True,\n        'recipients': ['admin@example.com'],\n    },\n    'slack': {\n        'enabled': False,\n        'webhook_url': 'your-webhook-url',\n    },\n}\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Docker et Docker Compose install\u00e9s</li> <li>Python 3.8 ou sup\u00e9rieur</li> <li>PostgreSQL 12 ou sup\u00e9rieur</li> <li>Git</li> </ul>"},{"location":"installation/#installation-avec-docker-recommande","title":"Installation avec Docker (Recommand\u00e9)","text":"<ol> <li> <p>Clonez le d\u00e9p\u00f4t : <pre><code>git clone https://github.com/votre-username/WEB-ZTP.git\ncd WEB-ZTP\n</code></pre></p> </li> <li> <p>Configurez les variables d'environnement : <pre><code>cp .env.example .env\n# Modifiez les valeurs dans .env selon votre configuration\n</code></pre></p> </li> <li> <p>Lancez les conteneurs : <pre><code>docker-compose up -d\n</code></pre></p> </li> <li> <p>Acc\u00e9dez \u00e0 l'interface web : <pre><code>http://localhost:8000\n</code></pre></p> </li> </ol>"},{"location":"installation/#installation-manuelle","title":"Installation manuelle","text":"<ol> <li> <p>Clonez le d\u00e9p\u00f4t : <pre><code>git clone https://github.com/votre-username/WEB-ZTP.git\ncd WEB-ZTP\n</code></pre></p> </li> <li> <p>Cr\u00e9ez un environnement virtuel : <pre><code>python -m venv venv\nsource venv/bin/activate  # Sur Windows : venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Installez les d\u00e9pendances : <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Configurez la base de donn\u00e9es : <pre><code>python manage.py migrate\n</code></pre></p> </li> <li> <p>Cr\u00e9ez un superutilisateur : <pre><code>python manage.py createsuperuser\n</code></pre></p> </li> <li> <p>Lancez le serveur : <pre><code>python manage.py runserver\n</code></pre></p> </li> </ol>"},{"location":"installation/#configuration","title":"Configuration","text":""},{"location":"installation/#variables-denvironnement","title":"Variables d'environnement","text":"<p>Les variables d'environnement importantes \u00e0 configurer :</p> <ul> <li><code>DJANGO_SECRET_KEY</code> : Cl\u00e9 secr\u00e8te pour Django</li> <li><code>DATABASE_URL</code> : URL de connexion \u00e0 la base de donn\u00e9es</li> <li><code>DEBUG</code> : Mode debug (d\u00e9sactiver en production)</li> <li><code>ALLOWED_HOSTS</code> : Liste des h\u00f4tes autoris\u00e9s</li> </ul>"},{"location":"installation/#configuration-du-serveur-dhcp","title":"Configuration du serveur DHCP","text":"<ol> <li>Modifiez le fichier <code>dhcp/dhcpd.conf</code> selon vos besoins</li> <li>Red\u00e9marrez le service DHCP : <pre><code>sudo systemctl restart dhcpd\n</code></pre></li> </ol>"},{"location":"installation/#mise-a-jour","title":"Mise \u00e0 jour","text":"<p>Pour mettre \u00e0 jour une installation existante :</p> <ol> <li> <p>R\u00e9cup\u00e9rez les derni\u00e8res modifications : <pre><code>git pull\n</code></pre></p> </li> <li> <p>Mettez \u00e0 jour les d\u00e9pendances : <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Appliquez les migrations : <pre><code>python manage.py migrate\n</code></pre></p> </li> <li> <p>Red\u00e9marrez les services : <pre><code>docker-compose restart  # Si installation Docker\n# ou\npython manage.py runserver  # Si installation manuelle\n</code></pre></p> </li> </ol>"},{"location":"presentation/","title":"Pr\u00e9sentation","text":""},{"location":"presentation/#contexte","title":"Contexte","text":"<p>WEB-ZTP est n\u00e9 d'un besoin sp\u00e9cifique dans le domaine de la gestion de r\u00e9seau : simplifier et automatiser la configuration des \u00e9quipements r\u00e9seau. Ce projet a \u00e9t\u00e9 d\u00e9velopp\u00e9 dans le cadre du cursus ing\u00e9nieur \u00e0 T\u00e9l\u00e9com SudParis, avec pour objectif de cr\u00e9er une solution compl\u00e8te et professionnelle.</p>"},{"location":"presentation/#objectifs","title":"Objectifs","text":"<ul> <li>Automatisation : R\u00e9duire le temps de configuration des \u00e9quipements r\u00e9seau</li> <li>Simplicit\u00e9 : Offrir une interface intuitive pour les administrateurs r\u00e9seau</li> <li>Flexibilit\u00e9 : S'adapter \u00e0 diff\u00e9rents types d'\u00e9quipements et de configurations</li> <li>S\u00e9curit\u00e9 : Assurer une gestion s\u00e9curis\u00e9e des configurations r\u00e9seau</li> </ul>"},{"location":"presentation/#architecture","title":"Architecture","text":"<p>Le projet est construit autour de plusieurs composants majeurs :</p> <ol> <li>Interface Web : D\u00e9velopp\u00e9e avec Django</li> <li>Serveur DHCP : Impl\u00e9mentation personnalis\u00e9e pour la gestion des adresses IP</li> <li>Syst\u00e8me ZTP : M\u00e9canisme de configuration automatique des \u00e9quipements sur une base de template stock\u00e9e dans une \"vue\" template ZTP</li> <li>Base de donn\u00e9es : Stockage des configurations et des donn\u00e9es d'\u00e9quipement</li> </ol>"},{"location":"presentation/#technologies-utilisees","title":"Technologies utilis\u00e9es","text":"<ul> <li>Backend : Python, Django, PostgreSQL</li> <li>Frontend : HTML, CSS</li> <li>D\u00e9ploiement : Docker</li> <li>S\u00e9curit\u00e9 : HTTPS, Authentification</li> </ul>"},{"location":"presentation/#public-cible","title":"Public cible","text":"<p>Cette solution s'adresse principalement aux : - Administrateurs r\u00e9seau - Techniciens en infrastructure - Entreprises g\u00e9rant un parc d'\u00e9quipements r\u00e9seau important - \u00c9tablissements \u00e9ducatifs et centres de recherche</p>"},{"location":"structure/","title":"Pr\u00e9sentation","text":""},{"location":"structure/#contexte","title":"Contexte","text":"<p>WEB-ZTP est n\u00e9 d'un besoin sp\u00e9cifique dans le domaine de la gestion de r\u00e9seau : simplifier et automatiser la configuration des \u00e9quipements r\u00e9seau. Ce projet a \u00e9t\u00e9 d\u00e9velopp\u00e9 dans le cadre du cursus ing\u00e9nieur \u00e0 T\u00e9l\u00e9com SudParis, avec pour objectif de cr\u00e9er une solution compl\u00e8te et professionnelle.</p>"},{"location":"structure/#objectifs","title":"Objectifs","text":"<ul> <li>Automatisation : R\u00e9duire le temps de configuration des \u00e9quipements r\u00e9seau</li> <li>Simplicit\u00e9 : Offrir une interface intuitive pour les administrateurs r\u00e9seau</li> <li>Flexibilit\u00e9 : S'adapter \u00e0 diff\u00e9rents types d'\u00e9quipements et de configurations</li> <li>S\u00e9curit\u00e9 : Assurer une gestion s\u00e9curis\u00e9e des configurations r\u00e9seau</li> </ul>"},{"location":"structure/#architecture","title":"Architecture","text":"<p>Le projet est construit autour de plusieurs composants majeurs :</p> <ol> <li>Interface Web : D\u00e9velopp\u00e9e avec Django, offrant une exp\u00e9rience utilisateur moderne</li> <li>Serveur DHCP : Impl\u00e9mentation personnalis\u00e9e pour la gestion des adresses IP</li> <li>Syst\u00e8me ZTP : M\u00e9canisme de configuration automatique des \u00e9quipements</li> <li>Base de donn\u00e9es : Stockage des configurations et des donn\u00e9es d'\u00e9quipement</li> </ol>"},{"location":"structure/#technologies-utilisees","title":"Technologies utilis\u00e9es","text":"<ul> <li>Backend : Python, Django, PostgreSQL</li> <li>Frontend : HTML, CSS, JavaScript, Bootstrap</li> <li>D\u00e9ploiement : Docker, Nginx</li> <li>S\u00e9curit\u00e9 : HTTPS, Authentification</li> </ul>"},{"location":"structure/#public-cible","title":"Public cible","text":"<p>Cette solution s'adresse principalement aux : - Administrateurs r\u00e9seau - Techniciens en infrastructure - Entreprises g\u00e9rant un parc d'\u00e9quipements r\u00e9seau important - \u00c9tablissements \u00e9ducatifs et centres de recherche</p>"},{"location":"utilisation/","title":"Utilisation","text":""},{"location":"utilisation/#premiers-pas","title":"Premiers pas","text":""},{"location":"utilisation/#connexion-a-linterface","title":"Connexion \u00e0 l'interface","text":"<ol> <li> <p>Acc\u00e9dez \u00e0 l'interface web : <pre><code>http://localhost:8000\n</code></pre></p> </li> <li> <p>Connectez-vous avec vos identifiants :</p> </li> <li>Utilisateur : admin</li> <li>Mot de passe : (celui d\u00e9fini lors de l'installation)</li> </ol>"},{"location":"utilisation/#configuration-initiale","title":"Configuration initiale","text":"<ol> <li>Configurez le serveur DHCP :</li> <li>Acc\u00e9dez \u00e0 \"Configuration\" &gt; \"Serveur DHCP\"</li> <li>D\u00e9finissez les plages d'adresses IP</li> <li> <p>Configurez les options DHCP</p> </li> <li> <p>D\u00e9finissez les templates de configuration :</p> </li> <li>Acc\u00e9dez \u00e0 \"Configuration\" &gt; \"Templates\"</li> <li>Cr\u00e9ez des templates pour vos \u00e9quipements</li> </ol>"},{"location":"utilisation/#gestion-des-equipements","title":"Gestion des \u00e9quipements","text":""},{"location":"utilisation/#ajout-dun-equipement","title":"Ajout d'un \u00e9quipement","text":"<ol> <li>Acc\u00e9dez \u00e0 \"\u00c9quipements\" &gt; \"Ajouter\"</li> <li>Remplissez les informations :</li> <li>Nom de l'\u00e9quipement</li> <li>Mod\u00e8le</li> <li>Adresse MAC</li> <li> <p>Template de configuration</p> </li> <li> <p>Cliquez sur \"Enregistrer\"</p> </li> </ol>"},{"location":"utilisation/#configuration-automatique-ztp","title":"Configuration automatique (ZTP)","text":"<ol> <li>Branchez le nouvel \u00e9quipement au r\u00e9seau</li> <li>L'\u00e9quipement recevra automatiquement :</li> <li>Une adresse IP via DHCP</li> <li>Sa configuration via TFTP</li> <li> <p>Les param\u00e8tres r\u00e9seau n\u00e9cessaires</p> </li> <li> <p>V\u00e9rifiez le statut dans \"\u00c9quipements\" &gt; \"Statut\"</p> </li> </ol>"},{"location":"utilisation/#gestion-du-reseau","title":"Gestion du r\u00e9seau","text":""},{"location":"utilisation/#surveillance","title":"Surveillance","text":"<ol> <li>Tableau de bord :</li> <li>Vue d'ensemble des \u00e9quipements</li> <li>Statut des configurations</li> <li> <p>Alertes en temps r\u00e9el</p> </li> <li> <p>Logs :</p> </li> <li>Acc\u00e9dez \u00e0 \"Monitoring\" &gt; \"Logs\"</li> <li>Filtrez par type d'\u00e9v\u00e9nement</li> <li>Exportez les logs si n\u00e9cessaire</li> </ol>"},{"location":"utilisation/#maintenance","title":"Maintenance","text":"<ol> <li>Mise \u00e0 jour des configurations :</li> <li>Modifiez les templates</li> <li>Appliquez aux \u00e9quipements concern\u00e9s</li> <li> <p>V\u00e9rifiez les changements</p> </li> <li> <p>Sauvegarde :</p> </li> <li>Exportez les configurations</li> <li>Sauvegardez la base de donn\u00e9es</li> <li>Archivez les logs</li> </ol>"},{"location":"utilisation/#fonctionnalites-avancees","title":"Fonctionnalit\u00e9s avanc\u00e9es","text":""},{"location":"utilisation/#api-rest","title":"API REST","text":"<ol> <li> <p>Authentification : <pre><code>curl -X POST http://localhost:8000/api/token/\n  -H \"Content-Type: application/json\"\n  -d '{\"username\":\"admin\",\"password\":\"votre_mot_de_passe\"}'\n</code></pre></p> </li> <li> <p>Exemple d'utilisation : <pre><code># R\u00e9cup\u00e9rer la liste des \u00e9quipements\ncurl -H \"Authorization: Bearer votre_token\" http://localhost:8000/api/equipment/\n\n# Ajouter un \u00e9quipement\ncurl -X POST http://localhost:8000/api/equipment/\n  -H \"Authorization: Bearer votre_token\"\n  -H \"Content-Type: application/json\"\n  -d '{\"name\":\"switch1\",\"model\":\"Cisco\",\"mac_address\":\"00:11:22:33:44:55\"}'\n</code></pre></p> </li> </ol>"},{"location":"utilisation/#automatisation","title":"Automatisation","text":"<ol> <li> <p>Scripts Python : <pre><code>from web_ztp.client import WebZTPClient\n\nclient = WebZTPClient(api_url=\"http://localhost:8000/api/\")\nclient.authenticate(\"admin\", \"mot_de_passe\")\n\n# Ajouter un \u00e9quipement\nequipment = {\n    \"name\": \"switch1\",\n    \"model\": \"Cisco\",\n    \"mac_address\": \"00:11:22:33:44:55\"\n}\nclient.add_equipment(equipment)\n</code></pre></p> </li> <li> <p>Int\u00e9gration avec d'autres outils :</p> </li> <li>Ansible</li> <li>Puppet</li> <li>Chef</li> </ol>"},{"location":"utilisation/#depannage","title":"D\u00e9pannage","text":""},{"location":"utilisation/#problemes-courants","title":"Probl\u00e8mes courants","text":"<ol> <li>\u00c9quipement non d\u00e9tect\u00e9 :</li> <li>V\u00e9rifiez la connexion r\u00e9seau</li> <li>Confirmez l'adresse MAC</li> <li> <p>V\u00e9rifiez les logs DHCP</p> </li> <li> <p>Configuration non appliqu\u00e9e :</p> </li> <li>V\u00e9rifiez le template</li> <li>Confirmez les permissions TFTP</li> <li>Consultez les logs syst\u00e8me</li> </ol>"},{"location":"utilisation/#support","title":"Support","text":"<ol> <li>Documentation :</li> <li>Guide d'utilisation</li> <li>FAQ</li> <li> <p>Exemples de configuration</p> </li> <li> <p>Assistance :</p> </li> <li>Forum communautaire</li> <li>Tickets de support</li> <li>Documentation en ligne</li> </ol>"}]}