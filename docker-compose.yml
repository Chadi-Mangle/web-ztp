volumes:
  static:

services:
  db: 
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
  web:
    build: app
    depends_on:
      - db
    restart: always
    volumes:
      - ./app/media:/app/media
      - static:/app/staticfiles
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}

      IS_PRODUCTION: ${IS_PRODUCTION}
    command: /bin/bash entrypoint.sh
  caddy:
    build: caddy
    restart: always
    ports:
      - "8080:8080"
      - "44344:44344"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./app/media:/web/media
      - static:/web/staticfiles
    depends_on:
      - web
