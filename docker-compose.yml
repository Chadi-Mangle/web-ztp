services:
  caddy:
    container_name: caddy
    image: caddy:2
    networks:
      - web
    ports:
      - "443:443/tcp"
      - "80:80/tcp"
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - django-docker_media:/django-docker/media
      - django-docker_static:/django-docker/staticfiles
    working_dir: /srv

  web:
    container_name: web
    hostname: web
    build:
      context: "."
    networks:
      - web
      - db_network
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=webZtp.settings_prod
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ".:/app"
      - "django-docker_static:/app/staticfiles"
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:15
    networks:
      - db_network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  dhcp:
    container_name: dhcp
    hostname: dhcp
    build:
      context: "."
      dockerfile: Dockerfile.dhcp
    restart: unless-stopped
    privileged: true
    networks:
      - web
      - db_network
    environment:
      - DJANGO_SETTINGS_MODULE=webZtp.settings_prod
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - ".:/app"
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started

volumes:
  caddy_data: 
  caddy_config:
  django-docker_media:
  django-docker_static:
  postgres_data:

networks:
  web:
    driver: bridge
  db_network:
    driver: bridge
