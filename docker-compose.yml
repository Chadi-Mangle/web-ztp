volumes:
  static:

services:
  db: 
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
  web:
    build: app
    depends_on:
      - db
    restart: always
    volumes:
      - ./app/media:/app/media
      - static:/app/staticfiles
    environment:
      HOSTNAME: ${HOSTNAME}
      PRIVATE_IP: ${PRIVATE_IP}
      HTTPS_PORT: ${HTTPS_PORT}
      HTTP_PORT: ${HTTP_PORT}
      SECRET_KEY: ${SECRET_KEY}

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}

      IS_PRODUCTION: ${IS_PRODUCTION}
    command: /bin/bash entrypoint.sh
    develop:
      watch: 
        - action: sync+restart
          path: ./app
          target: /app
        - action: rebuild
          path: ./app/requirements.txt
  caddy:
    build: caddy
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./app/media:/web/media
      - static:/web/staticfiles
    depends_on:
      - web
    command: |
      sh -c "cp Caddyfile.tmpl Caddyfile && \
      caddy run --config /etc/caddy/Caddyfile --adapter caddyfile"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
  dhcp:
    build: 
      context: app
      dockerfile: Dockerfile.dhcp
    depends_on:
      - web
    command: /bin/bash entrypoint-dhcp.sh
    network_mode: host
    restart: always
    environment:
      PRIVATE_IP: ${PRIVATE_IP}

      HTTPS_PORT: ${HTTPS_PORT}
      HTTP_PORT: ${HTTP_PORT}      

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${HOSTNAME}
      POSTGRES_PORT: ${POSTGRES_PORT}

      IS_PRODUCTION: ${IS_PRODUCTION}
