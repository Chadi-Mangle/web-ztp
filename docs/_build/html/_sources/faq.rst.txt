FAQ
===

Questions fréquemment posées sur WebZTP.

Général
------

Qu'est-ce que WebZTP ?
~~~~~~~~~~~~~~~~~~~

WebZTP est une application web qui permet d'automatiser la configuration initiale des équipements réseau via le protocole Zero Touch Provisioning (ZTP).

Quels équipements sont supportés ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

WebZTP supporte les équipements des marques suivantes :

* Cisco
* Juniper
* Arista
* HP
* Dell

Comment fonctionne le ZTP ?
~~~~~~~~~~~~~~~~~~~~~~~

Le ZTP fonctionne selon les étapes suivantes :

1. L'équipement démarre sans configuration
2. Il obtient une adresse IP via DHCP
3. Il télécharge sa configuration via TFTP
4. Il applique la configuration automatiquement

Installation
-----------

Quels sont les prérequis ?
~~~~~~~~~~~~~~~~~~~~~~~

Les prérequis sont :

* Python 3.8+
* PostgreSQL
* Serveur DHCP
* Serveur TFTP
* Navigateur web moderne

Comment installer WebZTP ?
~~~~~~~~~~~~~~~~~~~~~~

Suivez ces étapes :

1. Clonez le dépôt
2. Installez les dépendances
3. Configurez la base de données
4. Appliquez les migrations
5. Créez un superutilisateur
6. Lancez le serveur

Configuration
-----------

Comment configurer le serveur DHCP ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

La configuration DHCP nécessite :

1. Plage d'adresses IP
2. Serveur TFTP
3. Options ZTP spécifiques au vendeur

Voir la section :doc:`configuration` pour plus de détails.

Comment créer un modèle ?
~~~~~~~~~~~~~~~~~~~~~

Pour créer un modèle :

1. Accédez à la section "Modèles"
2. Cliquez sur "Nouveau modèle"
3. Définissez les variables
4. Écrivez le contenu du modèle
5. Testez le modèle

Utilisation
---------

Comment ajouter un appareil ?
~~~~~~~~~~~~~~~~~~~~~~~~~

Pour ajouter un appareil :

1. Accédez à "Appareils"
2. Cliquez sur "Ajouter"
3. Entrez les informations
4. Sélectionnez un modèle
5. Enregistrez

Comment surveiller les déploiements ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Vous pouvez surveiller les déploiements via :

* Le tableau de bord
* Les journaux système
* Les notifications
* L'API REST

Sécurité
-------

Comment sécuriser WebZTP ?
~~~~~~~~~~~~~~~~~~~~~~

Recommandations de sécurité :

1. Utilisez HTTPS
2. Configurez l'authentification
3. Définissez des rôles utilisateur
4. Activez la journalisation
5. Faites des sauvegardes régulières

Comment gérer les utilisateurs ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~

La gestion des utilisateurs comprend :

* Création de comptes
* Attribution de rôles
* Gestion des permissions
* Réinitialisation des mots de passe

Dépannage
--------

Que faire en cas d'erreur ?
~~~~~~~~~~~~~~~~~~~~~~~

En cas d'erreur :

1. Consultez les journaux
2. Vérifiez la configuration
3. Testez la connectivité
4. Voir la section :doc:`troubleshooting`

Comment obtenir de l'aide ?
~~~~~~~~~~~~~~~~~~~~~~~

Vous pouvez obtenir de l'aide via :

* La documentation
* Le support technique
* Le forum communautaire
* Les tickets GitHub

API
---

Comment utiliser l'API ?
~~~~~~~~~~~~~~~~~~~

Pour utiliser l'API :

1. Obtenez un token
2. Consultez la documentation API
3. Testez les endpoints
4. Intégrez dans vos scripts

Voir la section :doc:`api` pour plus de détails.

Comment authentifier les requêtes API ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

L'authentification API utilise :

* Tokens JWT
* HTTPS
* Rate limiting
* Permissions basées sur les rôles

Performance
----------

Comment optimiser les performances ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Conseils d'optimisation :

1. Utilisez le cache
2. Optimisez les requêtes
3. Configurez le serveur web
4. Surveillez les ressources

Comment faire une sauvegarde ?
~~~~~~~~~~~~~~~~~~~~~~~~~

Procédure de sauvegarde :

1. Sauvegardez la base de données
2. Sauvegardez les fichiers de configuration
3. Sauvegardez les modèles
4. Automatisez les sauvegardes

Mise à jour
---------

Comment mettre à jour WebZTP ?
~~~~~~~~~~~~~~~~~~~~~~~~~

Pour mettre à jour :

1. Sauvegardez les données
2. Mettez à jour le code
3. Installez les dépendances
4. Appliquez les migrations
5. Redémarrez les services

Quand mettre à jour ?
~~~~~~~~~~~~~~~~~

Recommandations de mise à jour :

* Suivez les versions stables
* Testez en environnement de dev
* Planifiez les mises à jour
* Gardez une procédure de rollback 